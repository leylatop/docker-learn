# 使用的docker-compose版本
version: '3'
# 服务列表，一个容器可以理解Wie一个服务，可以有多个服务
# services 列表中的容器，在网络上是相互隔离的，但是可以通过服务名进行通信
services:
  # redis服务，使用的是官方的redis镜像，并指定服务名称为redis
  redis-server: 
    image: 'redis'
  # node-app服务，使用的是当前目录下的Dockerfile文件构建镜像
  node-app:
    # 重启策略还可以是no、on-failure、unless-stopped
    # 重启策略为always时，容器总是重启
    # 重启策略为no时，容器不重启
    # 重启策略为on-failure时，容器退出状态为非0时，才会重启
    # 重启策略为unless-stopped时，容器不是通过docker stop命令停止时，才会重启
    # restart: always
    restart: on-failure
    # 在当前目录中查找Dockerfile文件，构建镜像
    build: .
    # 指定服务依赖的服务，这里依赖redis-server服务
    depends_on:
      - redis-server
    # 指定服务运行时的环境变量
    # 第一个端口号是容器内部的端口号，第二个端口号是容器对外映射的端口号
    ports:
      - "8081:8081"